[{"C:\\projects\\Tasks-from-Ignat\\src\\index.tsx":"1","C:\\projects\\Tasks-from-Ignat\\src\\serviceWorker.ts":"2","C:\\projects\\Tasks-from-Ignat\\src\\p1-main\\m1-ui\\u1-app\\App.tsx":"3","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h2\\HW2.tsx":"4","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h1\\HW1.tsx":"5","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h2\\Affairs.tsx":"6","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h1\\Message.tsx":"7","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h2\\Affair.tsx":"8","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h3\\HW3.tsx":"9","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h3\\GreetingContainer.tsx":"10","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h3\\Greeting.tsx":"11"},{"size":543,"mtime":1651341556796,"results":"12","hashOfConfig":"13"},{"size":6253,"mtime":1651341557318,"results":"14","hashOfConfig":"13"},{"size":477,"mtime":1652111134553,"results":"15","hashOfConfig":"13"},{"size":2153,"mtime":1652117724317,"results":"16","hashOfConfig":"13"},{"size":1073,"mtime":1652111134569,"results":"17","hashOfConfig":"13"},{"size":1685,"mtime":1652116910087,"results":"18","hashOfConfig":"13"},{"size":851,"mtime":1651341556881,"results":"19","hashOfConfig":"13"},{"size":800,"mtime":1652118828662,"results":"20","hashOfConfig":"13"},{"size":1015,"mtime":1652111134772,"results":"21","hashOfConfig":"13"},{"size":1601,"mtime":1652111134772,"results":"22","hashOfConfig":"13"},{"size":923,"mtime":1652111134772,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ecqidq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\projects\\Tasks-from-Ignat\\src\\index.tsx",[],["50","51"],"C:\\projects\\Tasks-from-Ignat\\src\\serviceWorker.ts",[],"C:\\projects\\Tasks-from-Ignat\\src\\p1-main\\m1-ui\\u1-app\\App.tsx",[],"C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h2\\HW2.tsx",["52"],"C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h1\\HW1.tsx",[],"C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h2\\Affairs.tsx",[],"C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h1\\Message.tsx",["53"],"import React from 'react'\r\nimport styles from './Message.module.css'\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.message_container}>\r\n                <img src={props.avatar} className={styles.avatar}/>\r\n                <div className={styles.message}>\r\n                    <div className={styles.name}>\r\n                       <b> {props.name}</b>\r\n                    </div>\r\n                    <div>{props.message}</div>\r\n                    <div className={styles.time}>\r\n                        {props.time}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h2\\Affair.tsx",[],"C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h3\\HW3.tsx",[],"C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h3\\GreetingContainer.tsx",["54"],"import React, {ChangeEvent, ChangeEventHandler, FC, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>;\r\n    addUserCallback: (name: string) => void;\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer:FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const name = event.currentTarget.value;\r\n        if (name.length !== 0) {\r\n           setError(\"\")\r\n        }\r\n\r\n        setName(name)\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.length === 0) {\r\n            setError(\"Введите имя\")\r\n        } else {\r\n            alert(`Hello ${name}  ! `)\r\n            addUserCallback(name)\r\n            setName(\"\")\r\n        }\r\n\r\n    }\r\n\r\n    const totalUsers: number = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","C:\\projects\\Tasks-from-Ignat\\src\\p2-homeworks\\h3\\Greeting.tsx",["55"],"import React, {ChangeEvent, ChangeEventHandler, FC} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string;\r\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void; // need to fix any\r\n    addUser: () => void;\r\n    error: string;\r\n    totalUsers: number;\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting:FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers}\r\n) => {\r\n    const inputClass = error.length ? s.error : s.someClass;\r\n\r\n    return (\r\n        <div>\r\n            <div><input value={name} onChange={setNameCallback} className={inputClass}/>\r\n                <button onClick={addUser}>add</button>\r\n            </div>\r\n            <div className={s.textError}>{error}</div>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":15,"column":17,"nodeType":"66","endLine":15,"endColumn":68},{"ruleId":"60","severity":1,"message":"67","line":1,"column":29,"nodeType":"62","messageId":"63","endLine":1,"endColumn":47},{"ruleId":"60","severity":1,"message":"67","line":1,"column":29,"nodeType":"62","messageId":"63","endLine":1,"endColumn":47},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ChangeEventHandler' is defined but never used.","no-global-assign","no-unsafe-negation"]